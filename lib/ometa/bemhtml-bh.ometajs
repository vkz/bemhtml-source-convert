var ometajs = require('ometajs'),
    bemhtml = require('./bemhtml'),
    BEMHTMLToXJST = bemhtml.BEMHTMLToXJST
    lo = require('lodash');

function out() {
    console.log.apply(null, [">>> out::\n"].concat(lo.toArray(arguments), ['\n']));
}


function Classes() {
    this.c1 = [];
    this.c2 = [];
    this.c3 = [];
}

Classes.prototype._bemFields = (function (bemFields) {
    return lo.zipObject(
        bemFields,
        bemFields.map(function test(field) {
            var re = new RegExp('\\bthis\\.' + field + '\\b');
            return function(str) { return re.test(str) };
        }));
})(['block', 'elem', 'mods', 'elemMods', '_mode', '_buf']);

Classes.prototype.addClass = function addClass(subClass) {
    // subClass is "1.2" ==> "1" ==> "c1"
    this['c' + subClass.split('.').shift()].push(subClass);
};

ometa Classifier <: BEMHTMLToXJST {


    topLevel %( this._class = new Classes()) = ^topLevel:t {
        this._class.addClass(t.length > 1 ? '1.2' : '1.1');} -> [].concat([this._class],t)


}
